# virt-ctrl (originally called mlvirtmanager)
# Copyright (C) 2007 Red Hat Inc., Richard W.M. Jones
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

INSTALL		:= @INSTALL@

prefix		= @prefix@
exec_prefix	= @exec_prefix@
bindir		= @bindir@

with_icons	= @with_icons@
icons		= @icons@

HAVE_GDK_PIXBUF_MLSOURCE = @HAVE_GDK_PIXBUF_MLSOURCE@

pkg_dbus        = @pkg_dbus@
pkg_gettext     = @pkg_gettext@

OCAMLFIND	= @OCAMLFIND@

ifneq ($(pkg_gettext),no)
OBJS 		:= virt_ctrl_gettext.cmo
endif

OBJS		+= \
	vc_helpers.cmo \
	vc_connections.cmo \
	vc_domain_ops.cmo \
	vc_connection_dlg.cmo \
	vc_mainwindow.cmo

ifneq ($(OCAMLFIND),)
# Good, we have ocamlfind.
OCAMLCPACKAGES	:= -I ../libvirt -package unix,lablgtk2
ifeq ($(pkg_dbus),yes)
OCAMLCPACKAGES  += -package dbus
OBJS            += vc_dbus.cmo
endif
ifeq ($(pkg_gettext),yes)
OCAMLCPACKAGES  += -package gettext-stub
endif
OCAMLCFLAGS	:= -g
OCAMLCLIBS	:= -linkpkg
OCAMLOPTPACKAGES := $(OCAMLCPACKAGES)
OCAMLOPTFLAGS	:=
OCAMLOPTLIBS	:= $(OCAMLCLIBS)
else
# Bad boy, please install ocamlfind.
OCAMLCINCS	:= -I ../libvirt -I @pkg_lablgtk2@
OCAMLCFLAGS	:= -g
OCAMLCLIBS	:= unix.cma lablgtk.cma
OCAMLOPTINCS	:= $(OCAMLCINCS)
OCAMLOPTFLAGS	:=
OCAMLOPTLIBS	:= unix.cmxa lablgtk.cmxa
endif

ifneq ($(with_icons),no)
OBJS		+= vc_icons.cmo
endif

export LIBRARY_PATH=../libvirt
export LD_LIBRARY_PATH=../libvirt

BYTE_TARGETS	:= virt-ctrl
OPT_TARGETS	:= virt-ctrl.opt

OBJS += virt_ctrl.cmo

XOBJS := $(OBJS:.cmo=.cmx)

all: $(BYTE_TARGETS)

opt: $(OPT_TARGETS)

ifneq ($(OCAMLFIND),)
virt-ctrl: $(OBJS)
	$(OCAMLFIND) ocamlc $(OCAMLCPACKAGES) $(OCAMLCFLAGS) $(OCAMLCLIBS) \
	  ../libvirt/mllibvirt.cma gtkInit.cmo -o $@ $^

virt-ctrl.opt: $(XOBJS)
	$(OCAMLFIND) ocamlopt \
	  $(OCAMLOPTPACKAGES) $(OCAMLOPTFLAGS) $(OCAMLOPTLIBS) \
	  ../libvirt/mllibvirt.cmxa gtkInit.cmx -o $@ $^
else
virt-ctrl: $(OBJS)
	$(OCAMLC) $(OCAMLCINCS) $(OCAMLCFLAGS) $(OCAMLCLIBS) \
	  ../libvirt/mllibvirt.cma gtkInit.cmo -o $@ $^

host_os		= @host_os@

ifneq ($(host_os),mingw32)
virt-ctrl.opt: $(XOBJS)
	$(OCAMLOPT) $(OCAMLOPTINCS) $(OCAMLOPTFLAGS) $(OCAMLOPTLIBS) \
	  $(patsubst %,-cclib %,$(LDFLAGS)) \
	  ../libvirt/mllibvirt.cmxa gtkInit.cmx -o $@ $^
else
# On MinGW, use a hacked 'gcc' wrapper which understands the @...
# syntax for extending the command line.
gcc.exe: mingw-gcc-wrapper.ml
	$(OCAMLC) unix.cma $< -o $@

virt-ctrl.opt: $(XOBJS) gcc.exe
	PATH=.:$$PATH \
	$(OCAMLOPT) $(OCAMLOPTINCS) $(OCAMLOPTFLAGS) $(OCAMLOPTLIBS) \
	  $(patsubst %,-cclib %,$(LDFLAGS)) \
	  ../libvirt/mllibvirt.cmxa gtkInit.cmx -o $@ $(XOBJS)
endif
endif

# Rebuild the icons if newer ones available.
ifneq ($(with_icons),no)
ifneq ($(icons),)
ifeq ($(HAVE_GDK_PIXBUF_MLSOURCE),gdk-pixbuf-mlsource)
vc_icons.ml: rebuild-icons.sh
	./rebuild-icons.sh $(icons) > $@
endif
endif
endif

install:
	if [ -x virt-ctrl.opt ]; then \
	  mkdir -p $(DESTDIR)$(bindir); \
	  $(INSTALL) -m 0755 virt-ctrl.opt $(DESTDIR)$(bindir)/virt-ctrl; \
	fi

include ../Make.rules
